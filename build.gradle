buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.minecraftforge.net' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.3.0-A' // 1 <mayor update> .0 <update> .0 <patch> -A/B/C/D... <hotfix>
group= "team.creative" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
java.toolchain.languageVersion = JavaLanguageVersion.of(17)


configurations {
    library
    implementation.extendsFrom library
}

minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            taskName "littleframes_client"
            workingDirectory project.file('run')
			
			property 'forge.logging.console.level', 'debug'
			arg '--mixin.config'
			arg 'creativecore.mixins.json'
			arg '--mixin.config'
			arg 'creativecore.forge.mixins.json'
        }

        server {
            taskName "littleframes_server"
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            arg '--mixin.config'
            arg 'creativecore.mixins.json'
            arg '--mixin.config'
            arg 'creativecore.forge.mixins.json'
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.tterrag.com/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'
    
    // Apply Mixin AP
    implementation fg.deobf("curse.maven:creativecore-257814:4394989")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
	
//	library("uk.co.caprica:vlcj:5.0.0-SNAPSHOT") {
//        exclude group: 'net.java.dev.jna', module: 'jna-jpms'
//        exclude group: 'net.java.dev.jna', module: 'jna-platform-jpms'
//    }
}


jar {
    manifest {
        attributes([
            "Specification-Title": project.modname,
            "Specification-Vendor": "CreativeMD",
            "Specification-Version": project.version,
            "Implementation-Title": project.name,
            "Implementation-Version"  : project.version,
            "Implementation-Vendor": "CreativeMD",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from {
        configurations.library.collect {
            it.isDirectory() ? it.matching {
                exclude '*', 'META-INF/**'
            } : zipTree(it).matching {
                exclude '*', 'META-INF/**'
            }
        }
    }
}

jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}